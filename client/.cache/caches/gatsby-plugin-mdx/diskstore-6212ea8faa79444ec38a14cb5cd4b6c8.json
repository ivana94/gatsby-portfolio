{"expireTime":9007200866604163000,"key":"gatsby-plugin-mdx-entire-payload-d543932235f84703fc563c7d65d40d4e-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"cooooooooooooode","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":20,"offset":20},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":20,"offset":20},"indent":[]}},{"type":"code","lang":"jsx","meta":"react-live","value":"import React from \"react\";\n\nconst Dump = (props) => (\n    <div\n        style={{\n            fontSize: 20,\n            border: \"1px solid #efefef\",\n            padding: 10,\n            background: \"white\",\n        }}\n    >\n        {Object.entries(props).map(([key, val]) => (\n            <pre key={key}>\n                <strong style={{ color: \"white\", background: \"red\" }}>\n                    {key} ?\n                </strong>\n                {JSON.stringify(val, \"\", \" \")}\n            </pre>\n        ))}\n    </div>\n);\n\nexport default Dump;","position":{"start":{"line":4,"column":1,"offset":22},"end":{"line":28,"column":4,"offset":585},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Hello World\",\"date\":\"2020-09-11T00:00:00.000Z\",\"cover\":\"./cover.jpg\",\"published\":true}","position":{"start":{"line":31,"column":1,"offset":588},"end":{"line":31,"column":125,"offset":712},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":31,"column":125,"offset":712}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Hello World\",\n  \"date\": \"2020-09-11T00:00:00.000Z\",\n  \"cover\": \"./cover.jpg\",\n  \"published\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"cooooooooooooode\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"react-live\",\n    \"react-live\": true\n  }), \"import React from \\\"react\\\";\\n\\nconst Dump = (props) => (\\n    <div\\n        style={{\\n            fontSize: 20,\\n            border: \\\"1px solid #efefef\\\",\\n            padding: 10,\\n            background: \\\"white\\\",\\n        }}\\n    >\\n        {Object.entries(props).map(([key, val]) => (\\n            <pre key={key}>\\n                <strong style={{ color: \\\"white\\\", background: \\\"red\\\" }}>\\n                    {key} ?\\n                </strong>\\n                {JSON.stringify(val, \\\"\\\", \\\" \\\")}\\n            </pre>\\n        ))}\\n    </div>\\n);\\n\\nexport default Dump;\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Hello World\",\n  \"date\": \"2020-09-11T00:00:00.000Z\",\n  \"cover\": \"./cover.jpg\",\n  \"published\": true\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`cooooooooooooode`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"react-live\",\n        \"react-live\": true\n      }}>{`import React from \"react\";\n\nconst Dump = (props) => (\n    <div\n        style={{\n            fontSize: 20,\n            border: \"1px solid #efefef\",\n            padding: 10,\n            background: \"white\",\n        }}\n    >\n        {Object.entries(props).map(([key, val]) => (\n            <pre key={key}>\n                <strong style={{ color: \"white\", background: \"red\" }}>\n                    {key} ?\n                </strong>\n                {JSON.stringify(val, \"\", \" \")}\n            </pre>\n        ))}\n    </div>\n);\n\nexport default Dump;\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}